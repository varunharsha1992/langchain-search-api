name: Deploy to Heroku

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to Heroku Staging
        if: |
          github.event.inputs.environment == 'staging' ||
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: langchain-search-api-staging
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          procfile: "web: uvicorn src.main:app --host=0.0.0.0 --port=$PORT"
          healthcheck: "https://langchain-search-api-staging.herokuapp.com/health"
          rollbackonhealthcheckfailed: true

      - name: Deploy to Heroku Production
        if: |
          github.event.inputs.environment == 'production' ||
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: langchain-search-api
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          procfile: "web: uvicorn src.main:app --host=0.0.0.0 --port=$PORT"
          healthcheck: "https://langchain-search-api.herokuapp.com/health"
          rollbackonhealthcheckfailed: true 