---
name: Deploy to Heroku

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Authenticate with Heroku
        run: |
          cat > ~/.netrc << EOF
          machine api.heroku.com
            login ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_KEY }}
          machine git.heroku.com
            login ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_KEY }}
          EOF
          chmod 600 ~/.netrc

      - name: Deploy to Heroku Staging
        if: |
          github.event.inputs.environment == 'staging' ||
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          heroku container:login
          
          # Check if app exists
          if ! heroku apps:info langchain-search-api-staging &> /dev/null; then
            echo "Creating new app with container stack"
            heroku apps:create langchain-search-api-staging --stack=container
          fi
          
          # Set the environment variable
          heroku config:set OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" --app langchain-search-api-staging
          
          # Deploy the container
          heroku container:push web --app langchain-search-api-staging
          heroku container:release web --app langchain-search-api-staging

      - name: Deploy to Heroku Production
        if: |
          github.event.inputs.environment == 'production' ||
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          heroku container:login
          
          # Check if app exists
          if ! heroku apps:info langchain-search-api &> /dev/null; then
            echo "Creating new app with container stack"
            heroku apps:create langchain-search-api --stack=container
          fi
          
          # Set the environment variable
          heroku config:set OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" --app langchain-search-api
          
          # Deploy the container
          heroku container:push web --app langchain-search-api
          heroku container:release web --app langchain-search-api 